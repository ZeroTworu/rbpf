name: "Build Rust eBPF"

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: "write"

jobs:
  build-bin-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - name: "📦 Run x86_64 build bin"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-bin x86_64"
      - uses: actions/upload-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/

  build-bin-armv7:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - name: "📦 Run armv7 build bin"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-bin armv7"
      - uses: actions/upload-artifact@v4
        with:
          name: build-bin-arm-v7
          path: rbpf-build/opt/rbpf/bin/

  build-vue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "📦 Run WebUI build"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: cargo xtask build-vue
      - uses: actions/upload-artifact@v4
        with:
          name: build-vue
          path: rbpf-build/opt/rbpf/ui/

  prepare:
    needs: [ build-bin-x86_64, build-bin-armv7, build-vue ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-vue
          path: rbpf-build/opt/rbpf/ui/
      - name: "📦 Run prepare contents"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: cargo xtask prepare
      - uses: actions/upload-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/

  package-zst:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/
      - uses: actions/download-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/
      - name: "📦 Run build .zst package"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-pkg zst"
      - uses: "actions/upload-artifact@v4"
        with:
          name: "zst"
          path: "*.zst"

  package-deb:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/
      - uses: actions/download-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/
      - name: "📦 Run build .deb package"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-pkg deb"
      - uses: actions/upload-artifact@v4
        with:
          name: deb
          path: "*.deb"

  package-rpm:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/
      - uses: actions/download-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/
      - name: "📦 Run build .rpm package"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-pkg rpm"
      - uses: actions/upload-artifact@v4
        with:
          name: rpm
          path: "*.rpm"

  package-zip-x86_64:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/
      - uses: actions/download-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/
      - name: "📦 Run build simple .tar.gz for x86_64"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-bin-zip x86_64"
      - uses: actions/upload-artifact@v4
        with:
          name: zip-x86_64
          path: "*.tar.gz"

  package-zip-arm:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/
      - uses: actions/download-artifact@v4
        with:
          name: build-bin-arm-v7
          path: rbpf-build/opt/rbpf/bin/
      - name: "📦 Run build simple .tar.gz for arm"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: "cargo xtask build-bin-zip armv7"
      - uses: actions/upload-artifact@v4
        with:
          name: zip-armv7
          path: "*.tar.gz"

  package-zip-vue:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/
      - name: "📦 Run build simple .tar.gz with WebUI"
        uses: "docker://hanyuu/rbpf-rust-builder:xtask"
      - run: cargo xtask build-vue-zip
      - uses: actions/upload-artifact@v4
        with:
          name: zip-vue
          path: "*.tar.gz"

  upload:
    needs: [ package-zst, package-deb, package-rpm, package-zip-x86_64, package-zip-arm, package-zip-vue]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "⬇️ Download all artifacts"
        uses: actions/download-artifact@v4
        with:
          path: ./all-artifacts

      - name: "🧹 Clear after build"
        run: |
          cd all-artifacts
          find . -name '*debug*' -delete
          rm -rf ./build-*/

      - name: "📦 Rename artifacts"
        run: |
          cd all-artifacts
          TAG_NAME=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/\//_/g')

          find -name '*.zst' -print0 | while IFS= read -r -d '' f; do
            mv "$f" "${f%.pkg.tar.zst}-${TAG_NAME}.pkg.tar.zst"
          done

          find -name '*.deb' -print0 | while IFS= read -r -d '' f; do
            mv "$f" "${f%.deb}-${TAG_NAME}.deb"
          done

          find -name '*.rpm' -print0 | while IFS= read -r -d '' f; do
            mv "$f" "${f%.rpm}-${TAG_NAME}.rpm"
          done

          find -name '*.tar.gz' -print0 | while IFS= read -r -d '' f; do
            mv "$f" "${f%.tar.gz}-${TAG_NAME}.tar.gz"
          done

      - name: "📤 Upload to GitHub Release"
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            all-artifacts/deb/*
            all-artifacts/rpm/*
            all-artifacts/zst/*
            all-artifacts/zip-vue/*
            all-artifacts/zip-armv7/*
            all-artifacts/zip-x86_64/*
