name: "Build Rust eBPF"

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: "write"

jobs:
  build-bin-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - run: ./build.sh --build-bin
      - uses: actions/upload-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/

  build-bin-armv7:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - run: ./build.sh --build-bin-armv7
      - uses: actions/upload-artifact@v4
        with:
          name: build-bin-arm-v7
          path: rbpf-build/opt/rbpf/bin/armv7/

  build-vue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ./build.sh --build-vue
      - uses: actions/upload-artifact@v4
        with:
          name: build-vue
          path: rbpf-build/opt/rbpf/ui/

  prepare:
    needs: [build-bin-x86_64, build-bin-armv7, build-vue]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: build-bin
          path: rbpf-build/opt/rbpf/bin/
      - uses: actions/download-artifact@v4
        with:
          name: build-vue
          path: rbpf-build/opt/rbpf/ui/
      - run: ./build.sh --prepare
      - uses: actions/upload-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/

  package-zst:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/

      - run: ./build.sh --build-zst

      - uses: actions/upload-artifact@v4
        with:
          name: zst
          path: "*.zst"

  package-deb:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/

      - run: ./build.sh --build-deb

      - uses: actions/upload-artifact@v4
        with:
          name: deb
          path: "*.deb"

  package-rpm:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/

      - run: ./build.sh --build-rpm

      - uses: actions/upload-artifact@v4
        with:
          name: rpm
          path: "*.rpm"

  package-zip:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: build-contents
          path: rbpf-build/

      - run: |
          ./build.sh --build-bin-zip
          ./build.sh --build-bin-zip-armv7
          ./build.sh --build-vue-zip

      - uses: actions/upload-artifact@v4
        with:
          name: zip
          path: "*.tar.gz"

  upload:
    needs: [ package-zst, package-deb, package-rpm, package-zip ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "‚¨áÔ∏è Download all artifacts"
        uses: actions/download-artifact@v4
        with:
          path: ./all-artifacts

      - name: "üßπ Clear after build"
        run: |
          cd all-artifacts
          find . -name '*debug*' -delete
          rm -rf ./build-*/

      - name: "üì¶ Rename artifacts"
        run: |
            cd all-artifacts
            TAG_NAME=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/\//_/g')
      
            find -name '*.zst' -print0 | while IFS= read -r -d '' f; do
              mv "$f" "${f%.pkg.tar.zst}-${TAG_NAME}.pkg.tar.zst"
            done
        
            find -name '*.deb' -print0 | while IFS= read -r -d '' f; do
              mv "$f" "${f%.deb}-${TAG_NAME}.deb"
            done
        
            find -name '*.rpm' -print0 | while IFS= read -r -d '' f; do
              mv "$f" "${f%.rpm}-${TAG_NAME}.rpm"
            done
          
            find -name '*.tar.gz' -print0 | while IFS= read -r -d '' f; do
              mv "$f" "${f%.tar.gz}-${TAG_NAME}.tar.gz"
            done
      - name: "üì§ Upload to GitHub Release"
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            all-artifacts/deb/*
            all-artifacts/rpm/*
            all-artifacts/zst/*
            all-artifacts/zip/*
